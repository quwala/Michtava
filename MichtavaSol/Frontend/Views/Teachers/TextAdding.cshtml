@model Frontend.Models.TextViewModel

<!DOCTYPE HTML>
<html lang="he" dir="rtl">
<head>
    <style>
        
        body {
            background-image: url("../../Backgrounds/background.jpg");
            width:100%;
            height: 100%;
            background-position: center;
            background-size: 100% 100%;
            background-repeat: no-repeat;
        }

        input[type='file'] {
            font-size: 16px;
        }

        input[type='submit'] {
            font-size: 24px;
        }

        .dropbtn {
            background-color: #4CAF50;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

        .dropbtn:hover, .dropbtn:focus {
            background-color: #3e8e41;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        .dropdown a:hover {background-color: #f1f1f1}

        .show {display:block;}
    </style>
</head>
@*<body>
<div class="row">
    <form class="text-right" action="SubmitText" method="post" id="TextData">
        <div class="row">
            <div class="col-sm-10">
                <h3><label for="FilePath">@ViewBag.Title:</label></h3>
            </div>
        </div>
        <br/><br/><br/>
        <div class="row">
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.FilePath,
                    new { @type = "file", @name = "FilePath", @id = "FilePath", accept = ".txt" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-10">
                <input type="submit" value="הוסף טקסט" />
            </div>
        </div>
    </form>
</div>
</body>
</html>*@

@using (Html.BeginForm("SubmitText", "Teachers", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Name,
                    new { @type = "file", @name = "FilePath", @id = "FilePath", accept = ".txt" })
                @Html.ValidationMessageFor(m => m.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="שמור טקסט" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div class="dropdown">
    <button onclick="myFunction()" class="dropbtn">בחר נושא</button>
    <div id="myDropdown" class="dropdown-content">
        @foreach (var subject in TempData)
        {
            <a href="#@subject">@subject.Value</a>
        }
    </div>
</div>

<script>
/* When the user clicks on the button,
toggle between hiding and showing the dropdown content */
    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

// Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
        if (!event.target.matches('.dropbtn')) {

            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
</script>

@*<div>
        @Html.ActionLinkWithSpan(
            "",
            "Index",
            "Administrators",
            new { @class = "btn btn-default btn-sm" },
            new { @class = "glyphicon glyphicon-arrow-left" })
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


