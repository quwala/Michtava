@model Domain.ModelView.UserViewModel    
    @using Domain.Models     
     @*here we connect strongly to a model, and so we can past him the fields that where full but the form 
               didnt validate so we want to keep those fields up.. nice way to do so without tons of tempdata or sessions variables..
               *@


@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Enter</title>

    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

</head>

<body>
    <div> 
       
          
        <form id="frmAdd" action="Submit" method="post">
            @*this wrapping the form with client side validation*@
            <table>
                <tr>
                    <td>First Name:</td>
                    <td> @Html.TextBoxFor(m => m.user.FirstName) @Html.ValidationMessageFor(x => x.user.FirstName) </td>
                    @*value m=>m. connect to the models fields*@ @*the end is to put every validation summery where it belong..*@
                </tr>
                <tr>
                    <td>Last Name:</td>
                    <td>@Html.TextBoxFor(m => m.user.LastName) @Html.ValidationMessageFor(x => x.user.LastName)</td>
                </tr>
                <tr>
                    <td>User Number:</td>
                    <td>@Html.TextBoxFor(m => m.user.UserNumber) @Html.ValidationMessageFor(x => x.user.UserNumber)</td>
                </tr>
                <tr>
                    <td><input id="Submit1" type="submit" value="Add User" onclick="SendData()" /></td>
                </tr>


            </table>
        </form>
        
        <b style="color:blue">Users Table</b>
        <br />
        <div id="status"></div>
        <table id="userTable">
            <tr>
                <td>First Name</td>
                <td>Last Name</td>
                <td>User Number</td>
            </tr>
        </table>
       
        <script language="javascript">
            
            $("#status").text("Loading......");

                                                        //get(action,data to the action?,functionToActive if we succeded to get the json object!)
            $.get("GetUsersByJson", null, BindData); //here we get the json obj from the server

            function BindData(users) {              //users is the json object we got from GetUsersByJson.
                var tbl = $("#userTable");
                for (i = 0; i < users.length; i++) {
                    var newRow =
                    "<tr>"+
                        "<td>"+users[i].FirstName+"</td>"+
                        "<td>"+users[i].LastName+"</td>"+
                        "<td>" + users[i].UserNumber + "</td>" +
                    "</tr>"
                    tbl.append(newRow);
                }

                $("#status").text("");

            }

            function SendData() {

                var frmData = $("#frmAdd").serialize();
                $.post("Submit", frmData, BindData);        //post is to send the mvc data and then load the bindData(users table) again
            }


        </script>

        
    </div>
    @Html.Partial("DisplayUsers", Model)
    
</body>
</html>
